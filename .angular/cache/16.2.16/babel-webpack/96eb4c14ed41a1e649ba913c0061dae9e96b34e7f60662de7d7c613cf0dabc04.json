{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/angel/Documents/gotzon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@services/local.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport let AdminPage = /*#__PURE__*/(() => {\n  class AdminPage {\n    constructor(loadingController, localService, router) {\n      this.loadingController = loadingController;\n      this.localService = localService;\n      this.router = router;\n      this.type = 'exercise';\n      this.lesson = 2;\n      this.exercises = [];\n      this.vocabularies = [];\n    }\n    ngAfterViewInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.loader = yield _this.loadingController.create({\n          message: 'Cargando...'\n        });\n        _this.getExercises();\n      })();\n    }\n    updateData(ev) {\n      if (this.type === 'exercise') {\n        this.getExercises();\n      } else {\n        this.getVocabulary();\n      }\n    }\n    getExercises() {\n      this.loader.present();\n      this.localService.getExerciseById(this.lesson).subscribe(data => {\n        this.exercises = data;\n        this.loader.dismiss();\n      }, err => {\n        this.loader.dismiss();\n      });\n    }\n    getVocabulary() {\n      this.loader.present();\n      this.localService.getVocabularyById(this.lesson).subscribe(data => {\n        this.vocabularies = data;\n        this.loader.dismiss();\n      }, err => {\n        this.loader.dismiss();\n      });\n    }\n    static #_ = this.ɵfac = function AdminPage_Factory(t) {\n      return new (t || AdminPage)(i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i2.LocalService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminPage,\n      selectors: [[\"app-admin\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[3, \"fullscreen\"], [1, \"page-container\"], [\"label\", \"Type\", \"placeholder\", \"Type\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"exercise\"], [\"value\", \"vocabulary\"]],\n      template: function AdminPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"ion-list\")(3, \"ion-item\")(4, \"ion-label\");\n          i0.ɵɵtext(5, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"ion-select\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminPage_Template_ion_select_ngModelChange_6_listener($event) {\n            return ctx.type = $event;\n          });\n          i0.ɵɵelementStart(7, \"ion-select-option\", 3);\n          i0.ɵɵtext(8, \"exercise\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"ion-select-option\", 4);\n          i0.ɵɵtext(10, \"vocabulary\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"ion-item\")(12, \"ion-label\");\n          i0.ɵɵtext(13, \"Lesson\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.type);\n        }\n      },\n      dependencies: [i4.NgControlStatus, i4.NgModel, i1.IonContent, i1.IonItem, i1.IonLabel, i1.IonList, i1.IonSelect, i1.IonSelectOption, i1.SelectValueAccessor],\n      styles: [\".page-container[_ngcontent-%COMP%]{padding:78px 2% 0!important}\"]\n    });\n  }\n  return AdminPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}